import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

plugins {
    id 'com.gradleup.shadow' version '8.3.3'
    id 'java'
}

group = 'top.alwaysready'
version = '1.0-SNAPSHOT'

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        name = "spigotmc-repo"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = "placeholderapi"
        url = "https://repo.extendedclip.com/content/repositories/placeholderapi/"
    }
    maven {
        name = "betonquest-repo"
        url = "https://nexus.betonquest.org/repository/betonquest/"
    }
}

dependencies {
    implementation "top.alwaysready:ReadyCoreShaded:1.0-SNAPSHOT"
    implementation project(":AnchorEngineCommon")
    shadow "org.spigotmc:spigot-api:1.21.1-R0.1-SNAPSHOT"
    shadow "me.clip:placeholderapi:2.11.6" transitive false
    shadow "org.betonquest:betonquest:2.1.3" transitive false
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

tasks.named('shadowJar', ShadowJar){
    archiveBaseName.set("${project.name}")
    archiveClassifier.set('')
    archiveVersion.set("${project.version}")
    relocate('top.alwaysready.readycore','top.alwaysready.anchorengine.readycore')
    exclude('META-INF/**')
}

jar{
//    from(project(":AnchorEngineCommon").file("build/classes/java/main"))
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
